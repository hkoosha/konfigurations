plugins {
    id "com.jfrog.bintray" version "1.8.5"
    id "com.github.spotbugs" version "4.6.0"
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'signing'
}

def isCiServer = System.getenv().containsKey("IS_CI_ENV")

tasks.withType(JavaCompile) {
    options.fork = true
}

group 'io.koosha.konfigurations'
version '9.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    useTestNG()
}

idea {
    module {
        outputDir = file('build')
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}

spotbugsMain {
    reports {
        html.enabled = true
    }
}

spotbugsTest {
    reports {
        html.enabled = true
    }
}

dependencies {
    compileOnly 'com.fasterxml.jackson.core:jackson-core:2.11.2'
    compileOnly 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    compileOnly 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.2'
    compileOnly 'com.google.code.gson:gson:2.8.6'
    compileOnly 'org.yaml:snakeyaml:1.26'

    compileOnly 'org.jetbrains:annotations:20.0.0'
    compileOnly 'net.jcip:jcip-annotations:1.0'

    testImplementation 'org.jetbrains:annotations:20.0.0'
    testImplementation 'net.jcip:jcip-annotations:1.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.2'
    testImplementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.yaml:snakeyaml:1.26'
    testImplementation 'org.testng:testng:7.3.0'
    testImplementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'org.slf4j:slf4j-simple:1.7.30'
    testCompileOnly 'com.google.code.findbugs:annotations:3.0.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {
    // user = isCiServer ? '' : myBintrayUser
    // key = isCiServer ? '' : myBintrayAPIKey
    user = ''
    key = ''
    pkg {
        repo = 'konfigurations'
        name = 'konfigurations'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/hkoosha/konfigurations'
    }
}

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'hkoosha'
            name 'Koosha Hosseiny'
            email 'i@koosha.io'
        }
    }
    
    scm {
       url 'https://github.com/hkoosha/konfigurations'
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'io.koosha.konfigurations'
            artifactId 'konfigurations'
            version '9.0.0'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Simple, small and extendable zero dependency configuration management library with live updates')
                root.appendNode('name', 'Konfigurations')
                root.appendNode('url', 'https://github.com/hkoosha/konfigurations')
                root.children().last() + pomConfig
            }
        }
    }
}

