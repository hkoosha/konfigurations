apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'distribution'
//apply plugin: 'maven-publish'
apply plugin: 'maven'

group 'net.parget.konfigurations'
version '5.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

test {
    useTestNG()
}

idea {
  module{
    outputDir = file('build')
    inheritOutputDirs = true
    downloadJavadoc = true
    downloadSources = true
  }
}

dependencies {
    compileOnly 'com.fasterxml.jackson.core:jackson-core:2.9.9'
    compileOnly 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    compileOnly 'com.google.inject:guice:4.0'

    testCompile 'com.fasterxml.jackson.core:jackson-core:2.9.9'
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    testCompile 'org.testng:testng:6.14.3'
    testCompile 'org.slf4j:slf4j-api:1.7.26'
    testCompile 'org.slf4j:slf4j-simple:1.7.26'
}

// task sourcesJar(type: Jar, dependsOn: classes) {
//     classifier = 'sources'
//     from sourceSets.main.allSource
// }
//
// task javadocJar(type: Jar, dependsOn: javadoc) {
//     classifier = 'javadoc'
//     from javadoc.destinationDir
// }

// task allJar(type: Jar, dependsOn: [sourcesJar, javadocJar, jar]) {
//     classifier = 'everything'
//     from sourceSets.main.allSource
//     from javadoc.destinationDir
//     baseName = 'allJar'
//     from configurations.archives.artifacts.files.collect {
//         zipTree(it)
//     }
// }

// artifacts {
//     archives sourcesJar
//     archives javadocJar
//     // archives allJar
// }

// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             from components.java
//             artifact sourcesJar {
//                 classifier "sources"
//             }
//         }
//     }
// }

task writeNewPom {
    doLast {
        pom {
            project {
                groupId 'net.parget.konfigurations'
                artifactId 'konfigurations'
                version '5.0.0'
                inceptionYear '2019'

                name 'Konfigurations'
                description 'Simple, small and extendable configuration management library with live updates.'
                url 'https://github.com/hkoosha/konfigurations'

                organization {
                  url 'https://pargar.net'
                  name 'Pargar'
                }

                developers {
                  developer {
                    url 'https://pargar.net'
                    name 'Koosha Hosseiny'
                    email 'koosha.hosseiny@gmail.com'
                    organization 'pargar'
                    organizationUrl 'http://pargar.net'
                  }
                }

                scm {
                  connection 'scm:git:git://github.com/hkoosha/konfigurations.git'
                  developerConnection 'scm:git:git@github.com:hkoosha/konfigurations.git'
                  url 'https://github.com/hkoosha/konfigurations'
                  tag 'release'
                }

                issueManagement {
                  system 'Github'
                  url 'https://github.com/hkoosha/konfigurations'
                }

                ciManagement {
                  system 'Travis'
                  url 'https://travis-ci.org/hkoosha/konfigurations'
                }

                distributionManagement {
                  snapshotRepository {
                    id 'ossrh'
                    name 'Snapshot Maven'
                    url 'https://oss.sonatype.org/content/repositories/snapshots'
                  }
                 //repository {
                 //  id 'ossrh'
                 //  name 'maven'
                 //  url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                 //}
                }


                licenses {
                    license {
                        name 'GNU General Public License'
                        url 'https://www.gnu.org/licenses/gpl-3.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("pom.xml")
    }
}
